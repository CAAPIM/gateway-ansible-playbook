# This sample playbook will perform an expedited upgrade on a source Gateway cluster (with
# one primary database Gateway and the remainder as processing Gateways) to another cluster.
#  
# Setup: 
# 1) Create source and destination clusters as defined above. 
# 2) Setup hosts under [gateway_primary_db] and [gateway_processing_node] in inventories/demo/hosts 
# 3) Setup passwords in inventories/demo/group_vars/all.yml
# 
# Sample usage: 
# - Run from the project root directory.
# ansible-playbook playbooks/sample-cluster-migration.yml -i inventories/demo/hosts --vault-password-file vault-password-file.txt
#

---

- name: Update expired passwords on new Gateways.
  hosts: gateway
  connection: local
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  roles:
    - gateway_common

- name: Setup MySQL database on the destination (primary database node) Gateway. 
  hosts: gateway_primary_db
  connection: local
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  roles:
    - gateway_primary_db_node

- name: Obtain a MySQL database dump from source Gateway cluster and store it on the Ansible control node.
  hosts: gateway_mysql_source
  serial: 1
  strategy: free
  roles:
    - gateway_export_database

- name: Import the MySQL database dump into the destination (primary database node) Gateway.
  hosts: gateway_mysql_dest 
  serial: 1
  strategy: free
  pre_tasks:
    - name: Stop the Gateway
      import_role:
        name: gateway_common
        tasks_from: stop_gateway
  roles:
    - gateway_import_database

- name: Upgrade Gateway version in the destination (primary database node) Gateway. 
  hosts: gateway_mysql_dest
  serial: 1
  tasks:
    - name: Upgrade Gateway version.
      delegate_to: localhost
      import_role:
        name: gateway_import_database
        tasks_from: upgrade_gateway_database_schema

- name: Add processing nodes to the new cluster with the destination (primary database node) Gateway.
  hosts: gateway_processing_node
  connection: local
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  roles:
    - gateway_processing_node

- name: Add destination Gateways to a group
  hosts: gateway 
  gather_facts: no
  tasks:
    - add_host:
        hostname: "{{ hostvars[item].dest }}"
        groups: gateway_dest
      with_items: "{{ groups['gateway'] }}"

- name: Restart all destination Gateways
  hosts: gateway_dest
  gather_facts: no
  tasks:
    - include_role:
        name: gateway_common
        tasks_from: restart_gateway_appliance 
