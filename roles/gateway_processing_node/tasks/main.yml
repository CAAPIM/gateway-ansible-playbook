---
- name: Check if destination Gateway node is already configured. # noqa 305 - no alternative to shell module
  no_log: true # don't log decrypted passwords
  shell:
    cmd: sshpass -p '{{ gateway_ssgconfig_password }}' {{ command_ssh_dest_gateway }} '{{ command_check_node_configured }}'
  register: configured
  changed_when: false
  failed_when: false

- name: Retrieve node properties template from source gateway, update properties, and use it to auto-provision destination Gateway.
  when: configured.rc != 0 # node is not configured yet
  block:
    - name: Retrieve the Gateway node properties template file. # noqa 305 - no alternative to shell module
      no_log: true # don't log decrypted passwords
      shell:
        cmd: sshpass -p '{{ gateway_ssgconfig_password }}' {{ command_ssh_source_gateway }} {{ command_retrieve_props }}
      register: template_content
    - name: Create temporary directory to store node properties template files.
      tempfile:
        state: directory
        prefix: "{{ node_props_dir }}"
      register: temp_dir
    - name: Save template text to local file.
      copy:
        content: "{{ '\r\n'.join(template_content.stdout_lines[2:]) }}" # Ignore first 2 lines of stdout
        dest: "{{ temp_dir.path }}/{{ inventory_hostname }}.properties"
      register: template_file
    - name: Set values in node properties template file.
      no_log: true # don't log decrypted passwords
      lineinfile:
        path: "{{ template_file.dest }}"
        regexp: '{{ item.from }}'
        line: '{{ item.to }}'
      with_items:
        - { from: '^#admin.user', to: 'admin.user={{ admin_user }}' }
        - { from: '^#admin.pass', to: 'admin.pass={{ admin_pass }}' }
        - { from: '^cluster.host', to: 'cluster.host={{ cluster_host }}' }
        - { from: '^#cluster.pass', to: 'cluster.pass={{ cluster_pass }}' }
        - { from: '^configure.db', to: 'configure.db={{ configure_db|lower }}' }
        - { from: '^database.host', to: 'database.host={{ database_host }}' }
        - { from: '^#database.pass', to: 'database.pass={{ database_pass }}' }
        - { from: '^#database.admin.pass', to: 'database.admin.pass={{ database_admin_pass }}' }
      register: updated_node_properties
    - name: Auto-provision the new Gateway node.
      no_log: true # don't log decrypted passwords
      shell:
        cmd: cat {{ template_file.dest }} | sshpass -p '{{ gateway_ssgconfig_password }}' {{ command_ssh_dest_gateway }} '{{ command_autoprovision_node }}'
      register: status
      failed_when: "'Configuration Successful' not in status.stdout"
